const router = require("express").Router();
const auth = require("../../middleware/auth");

const Fanfik = require("../../models/Fanfik");
const Chapter = require("../../models/Chapter");

// const cloudinary = require('cloudinary').v2;

// var multer = require('multer');


// cloudinary.config({
//   cloud_name: 'dntmre4o4',
//   api_key: '585866211186536',
//   api_secret: 'vakPSkE0hfy_Ub0S2HJ2RlyPodQ'
// });



// const uploadImg = multer().array('file');
// const uploadBody = multer().single('body');



// @route   POST api/fanfiks
// @desc    Create fanfik
// @access  Private
router.post("/", auth, (req, res) => {
  const { userName, userID, fanfikName, description, gener, tags, chapters } = req.body;
  const fanfik = new Fanfik({
    userName,
    userID,
    fanfikName,
    description,
    gener,
    tags
  });


  // uploadBody(req, res, function (err) {
  //   console.log(req.body.body);
  //   return;
  // });

  // uploadImg(req, res, function (err) {
  //   if (err instanceof multer.MulterError) {
  //       return res.status(500).json(err)
  //   } else if (err) {
  //       return res.status(500).json(err)
  //   }
  //   console.log(req.files[0].buffer.replace('<Buffer ', '').replace(' >', ''));


  //   // cloudinary.uploader.upload(req.files[0].buffer, function(error, result) {console.log(result, error)});


  //   res.sendStatus(200);
  //   return; 
  // });



  // console.log("1: " + JSON.stringify(req.body.chapters[0].chapterImages));
  // console.log("2: " + JSON.stringify(req.body.chapters[1].chapterImages));
  // chapters.map(item => {
  //   // console.log("chapter");
  //   item.chapterImages.map(image => {
  //     console.log(image);

      // let reader = new FileReader();
      // reader.readAsArrayBuffer(image);

     
      // cloudinary.uploader.upload(image.previewUrl, { tags: "basic_sample" }, function (err, image) {
      //   console.log();
      //   console.log("** Remote Url");
      //   if (err) { console.warn(err); }
      //   console.log("* " + image.public_id);
      //   console.log("* " + image.url);
      //   waitForAllUploads("couple", err, image);
      // });

      // let uploads = {};




      // cloudinary.uploader.upload(
      //   image.previewUrl, 
      //   {public_id: 'sample_remote'}, 
      //   function(error, result) { 
      //     console.log(result) 
      //   }
      // );
      
      // cloudinary.url("sample_remote.jpg")

      // image - image object (file)
      // logic to upload images to server and return links

      // cloudinar


      // cloudinary.v2.uploader.upload(image.previewUrl, 
      // function(error, result) {console.log(result, error)});


      // cloudinary.uploader.upload(image.previewUrl, { tags: 'basic_sample' }, function (err, uploadedImage) {
      //   console.log(uploadedImage);
      //   // console.log("** File Upload");
      //   // if (err) { console.warn(err); }
      //   // console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
      //   // console.log("* " + uploadedImage.public_id);
      //   // console.log("* " + uploadedImage.url);
      //   // waitForAllUploads("pizza", err, uploadedImage);
      // });





  //   });
  // })

  // console.dir(chapters[0].chapterImages);
  // chapters.map(chapter => {
    // console.log(chapter.chapterImages);
    // console.log('единица главы');
    // console.log(JSON.stringify(chapter.chapterImages));
    // console.log('единица главы');
    // chapter.chapterImages.map(image => {
    //   console.log(image);
    //   console.log('для каждой картинки внутри главы');
    // })
  // })
  fanfik.save().then(savedBook => {
    let promises = chapters.map(async item => {
      const chapter = new Chapter({
        bookID: savedBook._id,
        name: item.chapterName,
        text: item.chapterMarkdown,
        createDate: new Date(),
        images: [],
        likesFromID: []
      });
      return chapter.save();
    });
    Promise.all(promises).then(() => {
      return;
    });
    Fanfik.find().then(allFanfiks => {
      res.send(allFanfiks);
    });
  });
});

// @route GET api/fanfiks
// @desc get fanfiks list
// @access Public
router.get("/", (req, res) => {
  Fanfik.find().then(allFanfiks => {
    res.send(allFanfiks);
  });
});

// @route GET api/fanfiks/read
// @desc read fanfik
// @access Public
router.get("/read:id", (req, res) => {
  const id = req.params.id;

  let readInfo = {};

  Fanfik.findOne({ _id: id })
    .then(fanfik => {
      readInfo["fanfikName"] = fanfik.fanfikName;
      readInfo["description"] = fanfik.description;
      readInfo["gener"] = fanfik.gener;
      readInfo["tags"] = fanfik.tags;
      readInfo["rating"] = fanfik.rating;
      readInfo["comments"] = fanfik.comments;
    })
    .then(() => {
      Chapter.find({ bookID: id }).then(result => {
        let chapters = [];
        result.map(chapter => {
          chapters.push(chapter);
        });
        readInfo["chapters"] = chapters;
        res.send(readInfo);
      });
    });
});

router.delete("/fanfik:id", auth, (req, res) => {
  const id = req.params.id;
  Fanfik.findByIdAndDelete({_id: id})
    .then(() => {
      res.sendStatus(200);
    })
});

module.exports = router;
